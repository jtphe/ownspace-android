# this is an auto generated file. This will be overwritten
mutation CreateUser(
  $input: CreateUserInput!
  $condition: ModelUserConditionInput
) {
  createUser(input: $input, condition: $condition) {
    id
    firstname
    lastname
    email
    password
    picture
    notification
    role
    group
    limitedStorage
    storageSpaceUsed
    totalStorageSpace
  }
}
mutation UpdateUser(
  $input: UpdateUserInput!
  $condition: ModelUserConditionInput
) {
  updateUser(input: $input, condition: $condition) {
    id
    firstname
    lastname
    email
    password
    picture
    notification
    role
    group
    limitedStorage
    storageSpaceUsed
    totalStorageSpace
  }
}
mutation DeleteUser(
  $input: DeleteUserInput!
  $condition: ModelUserConditionInput
) {
  deleteUser(input: $input, condition: $condition) {
    id
    firstname
    lastname
    email
    password
    picture
    notification
    role
    group
    limitedStorage
    storageSpaceUsed
    totalStorageSpace
  }
}
mutation CreateGroup(
  $input: CreateGroupInput!
  $condition: ModelGroupConditionInput
) {
  createGroup(input: $input, condition: $condition) {
    id
    name
    userGroup {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
  }
}
mutation UpdateGroup(
  $input: UpdateGroupInput!
  $condition: ModelGroupConditionInput
) {
  updateGroup(input: $input, condition: $condition) {
    id
    name
    userGroup {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
  }
}
mutation DeleteGroup(
  $input: DeleteGroupInput!
  $condition: ModelGroupConditionInput
) {
  deleteGroup(input: $input, condition: $condition) {
    id
    name
    userGroup {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
  }
}
mutation CreateFile(
  $input: CreateFileInput!
  $condition: ModelFileConditionInput
) {
  createFile(input: $input, condition: $condition) {
    id
    createdAt
    updatedAt
    name
    content
    owner
    sharedList {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
    isProtected
    password
    parent
    size
    mimeType
    type
  }
}
mutation UpdateFile(
  $input: UpdateFileInput!
  $condition: ModelFileConditionInput
) {
  updateFile(input: $input, condition: $condition) {
    id
    createdAt
    updatedAt
    name
    content
    owner
    sharedList {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
    isProtected
    password
    parent
    size
    mimeType
    type
  }
}
mutation DeleteFile(
  $input: DeleteFileInput!
  $condition: ModelFileConditionInput
) {
  deleteFile(input: $input, condition: $condition) {
    id
    createdAt
    updatedAt
    name
    content
    owner
    sharedList {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
    isProtected
    password
    parent
    size
    mimeType
    type
  }
}
mutation CreateFolder(
  $input: CreateFolderInput!
  $condition: ModelFolderConditionInput
) {
  createFolder(input: $input, condition: $condition) {
    id
    createdAt
    updatedAt
    name
    owner
    sharedList {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
    isProtected
    password
    parent
    nbFiles
  }
}
mutation UpdateFolder(
  $input: UpdateFolderInput!
  $condition: ModelFolderConditionInput
) {
  updateFolder(input: $input, condition: $condition) {
    id
    createdAt
    updatedAt
    name
    owner
    sharedList {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
    isProtected
    password
    parent
    nbFiles
  }
}
mutation DeleteFolder(
  $input: DeleteFolderInput!
  $condition: ModelFolderConditionInput
) {
  deleteFolder(input: $input, condition: $condition) {
    id
    createdAt
    updatedAt
    name
    owner
    sharedList {
      id
      firstname
      lastname
      email
      password
      picture
      notification
      role
      group
      limitedStorage
      storageSpaceUsed
      totalStorageSpace
    }
    isProtected
    password
    parent
    nbFiles
  }
}
mutation CreateRight(
  $input: CreateRightInput!
  $condition: ModelRightConditionInput
) {
  createRight(input: $input, condition: $condition) {
    read
    edit
    documentId
  }
}
mutation UpdateRight(
  $input: UpdateRightInput!
  $condition: ModelRightConditionInput
) {
  updateRight(input: $input, condition: $condition) {
    read
    edit
    documentId
  }
}
mutation DeleteRight(
  $input: DeleteRightInput!
  $condition: ModelRightConditionInput
) {
  deleteRight(input: $input, condition: $condition) {
    read
    edit
    documentId
  }
}
mutation CreateApp(
  $input: CreateAppInput!
  $condition: ModelAppConditionInput
) {
  createApp(input: $input, condition: $condition) {
    groupId
    subscription
    pack
    custom
    headerColor
    iconeUrl
    font
  }
}
mutation UpdateApp(
  $input: UpdateAppInput!
  $condition: ModelAppConditionInput
) {
  updateApp(input: $input, condition: $condition) {
    groupId
    subscription
    pack
    custom
    headerColor
    iconeUrl
    font
  }
}
mutation DeleteApp(
  $input: DeleteAppInput!
  $condition: ModelAppConditionInput
) {
  deleteApp(input: $input, condition: $condition) {
    groupId
    subscription
    pack
    custom
    headerColor
    iconeUrl
    font
  }
}
